---
layout: post
title: Idioms.FsCheck
published: 1
categories: [AutoFixture]
comments: [disqus]
slug: "AutoFixture 3.18 introduces a new glue library called Idioms.FsCheck. It uses FsCheck to implement a reusable assertion that verifies (or at least, makes probable) that a method doesn't return null."
---

AutoFixture 3.18 introduces a new glue library called Idioms.FsCheck.

It uses [FsCheck](https://github.com/fsharp/FsCheck) to implement a reusable assertion that verifies (or at least, makes probable) that a method doesn't return null:

```
[Theory, UnitTestConventions]
public void Scenario(ISpecimenBuilder builder)
{
    var sut = from x in new Methods<SomeClass>() 
              select x.SomeMethod();
    var assertion = new ReturnValueMustNotBeNullAssertion(builder);
    Assert.Throws<ReturnValueMustNotBeNullException>(() => 
        assertion.Verify(sut));
}
```

**How it works**

If a method is parameterless the assertion simply exercises its return value by invoking it. Otherwise, its return value is exercised against arbitrary values generated by FsCheck.

An injected instance of an `ISpecimenBuilder` (e.g. a `Fixture` instance) creates instances of the type containing the method if it's declared as an instance method.

>When needed, AutoFixture and FsCheck can be customized via their DSLs.

**Samples**

* Idioms.FsCheck's test suite contains [examples in F#](https://github.com/AutoFixture/AutoFixture/blob/master/Src/Idioms.FsCheckUnitTest/ReturnValueMustNotBeNullAssertionTest.fs).
* The original question on Stack Overflow that triggered this feature includes [examples in C#](http://stackoverflow.com/a/22614410/467754).


**Installation**

Idioms.FsCheck is [available on NuGet](http://www.nuget.org/packages/AutoFixture.Idioms.FsCheck/):

```
PM> Install-Package AutoFixture.Idioms.FsCheck
```
